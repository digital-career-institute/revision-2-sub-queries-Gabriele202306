// 1. Return all customers listed in the orders table who placed orders on the most recently recorded day.
SELECT DISTINCT customer_id FROM orders WHERE order_date = (SELECT MAX("order_date") FROM "orders");

// 2. Select all product names and prices that have unit price which is bigger than price of product with name 'Carnarvon Tigers'
SELECT product_name, unit_price FROM products WHERE unit_price > (SELECT unit_price FROM products WHERE product_name = 'Carnarvon Tigers');

// 3. Select customer ids and their contact names that made order that was shipped to Brazil
SELECT customer_id, contact_name FROM customers WHERE customer_id IN (SELECT customer_id FROM orders WHERE ship_country = 'Brazil');

// 4. Select customer ids who ordered more than 20 items of product with name = 'Tofu' on a single order.
SELECT DISTINCT o.customer_id FROM orders o JOIN order_details od ON o.order_id = od.order_id JOIN products p ON od.product_id = p.product_id WHERE p.product_name = 'Tofu' AND od.quantity > 20;


// 5. Select only discounted products names, dicount value, category of it, and shipped date of order where this product occurs. Use join + sub query structure.
SELECT p.product_name, od.discount, c.category_name, o.shipped_date FROM products p JOIN categories c ON p.category_id = c.category_id
JOIN order_details od ON p.product_id = od.product_id JOIN orders o ON od.order_id = o.order_id WHERE od.discount > 0;


// 6. Select orders for customers that come from London and are shipped via United Package. Remember to use sub queries (not joins).
SELECT o.order_id, o.customer_id, o.ship_via, s.company_name, o.ship_city FROM orders o JOIN shippers s ON o.ship_via = s.shipper_id
WHERE o.customer_id IN (SELECT customer_id FROM customers WHERE ship_city = 'London')
AND s.company_name = 'United Package';

